apiVersion: helm.cattle.io/v1
kind: HelmChart
metadata:
  name: prometheus-lt
  namespace: monitoring
spec:
  # renovate: HelmChart
  repo: https://prometheus-community.github.io/helm-charts
  chart: kube-prometheus-stack
  version: 68.1.0
  targetNamespace: monitoring
  timeout: 10m
  failurePolicy: abort
  valuesContent: |-
    # Long term storage prometheus
    # 15 min scrape interval, basically no retention
    # fetches only a few selected series from the std prometheus instance
    # No Grafana, no alert manager (tbd), no exporters etc.

    # copied from https://github.com/cablespaghetti/k3s-monitoring
    # helm upgrade --install prometheus-lt prometheus-community/kube-prometheus-stack --values kube-prometheus-stack-values-lt.yaml

    # references
    # https://github.com/prometheus-community/helm-charts/blob/main/charts/kube-prometheus-stack/values.yaml

    defaultRules:
      create: true
      rules:
        alertmanager: false
        etcd: false
        configReloaders: false
        general: true
        k8s: false
        kubeApiserver: false
        kubeApiserverAvailability: false
        kubeApiserverSlos: false
        kubelet: false
        kubeProxy: false
        kubePrometheusGeneral: false
        kubePrometheusNodeRecording: false
        kubernetesApps: false
        kubernetesResources: false
        kubernetesStorage: false
        kubernetesSystem: false
        kubeScheduler: false
        kubeStateMetrics: false
        network: false
        node: false
        nodeExporterAlerting: false
        nodeExporterRecording: false
        prometheus: false
        prometheusOperator: false

    prometheus:
      ingress:
        enabled: false
        annotations:
          traefik.ingress.kubernetes.io/router.middlewares: prometheus-stripprefix@kubernetescrd
        hosts:
          - k3s.fritz.box
        paths:
          - /prometheus-lt
        pathType: Prefix

      prometheusSpec:
        scrapeInterval: 15m
        evaluationInterval: 15m
        retention: 100y
        enableAdminAPI: true
        externalUrl: "http://k3s.fritz.box/prometheus-lt/"

        query:
          lookbackDelta: 30m

        alertingEndpoints:
        - name: prometheus-kube-prometheus-alertmanager
          namespace: monitoring # !! absolute namespace !!
          port: http-web
          pathPrefix: /
          apiVersion: v2


    #    replicas: 2
    #    podAntiAffinity: "hard"
        # nodeSelector:
        #   kubernetes.io/hostname: nasbox
        storageSpec:
          volumeClaimTemplate:
            spec:
              accessModes: ["ReadWriteOnce"]
              storageClassName: longhorn
              resources:
                requests:
                  storage: 1Gi

        resources:
          requests:
            cpu: 100m
            memory: 128Mi
    #
    #  service:
    #    sessionAffinity: "ClientIP"
    #
      # this instance is monitored by std prometheus
      serviceMonitor:
        selfMonitor: false
      # poll selected metrics from kube-prometheus-stack-prometheus into long-term instance
      additionalServiceMonitors:
      - name: prometheus-federate
        selector:
          matchLabels:
            app: kube-prometheus-stack-prometheus
            release: prometheus
        endpoints:
        - path: /federate
          port: http-web
          honorLabels: true
          params:
            'match[]':
              - 'node_exporter_build_info{job="node-exporter"}'
              - 'node_cpu_seconds_total{job="node-exporter"}'
              - 'node_load15{job="node-exporter"}'
              - 'node_memory_MemTotal_bytes{job="node-exporter"}'
              - 'instance:node_memory_MemAvailable_bytes:avg15m{job="node-exporter"}'
              - 'node_filesystem_avail_bytes{job="node-exporter",fstype="ext4"}'
              - 'node_filesystem_size_bytes{job="node-exporter",fstype="ext4"}'
              - 'energy_rate_kwh_cents'
              - 'kpc_home_power_consumption_wh_total'
              - 'kpc_home_power_consumption_total_wh_total'
              - 'kpc_dc_energy_total_wh_total'
              - 'kpc_dc_energy_wh_total'
              - 'kpc_ac_energy_yield_wh_total'
              - 'kpc_ac_energy_to_grid_wh_total'
              - 'goe_energy_wh_total'
              - 'pvcontrol:total_charged_energy_wh_total'
              - 'pvcontrol:charged_energy_wh_total'
              - 'nibe_energy_meter_wh_total'
              - 'nibe_heat_meter_wh_total'
              - 'nibe_compressor_operating_time_seconds_total'
              - 'nibe_compressor_starts_total'
              - 'nibe_outdoor_temperature_celsius'
              - 'source:nibe_energy_meter_wh_total'
              - 'nibe_operation_mode'
              - 'nibe_energy_consumption_wh_total'
              - 'nibe_compressor_frequency_hertz'
              - 'nibe_heat_medium_temperature_celsius'
              - 'nibe_hotwater_temperature_celsius'
              - 'nibe_heat_medium_pump_speed_percent'
              - 'nibe_heat_medium_flow_liter_per_min'
              - 'nibe_degree_minutes'
              - 'nibegw_relay_state'
              - 'z2m_temperature_celsius'
              - 'z2m_humidity_percent'

    additionalPrometheusRulesMap:
      prometheus-lt.rules:
        groups:
        # Prometheus rules for the polled metrics with adaption to 15m scrape interval
        - name: node-exporter.rules
          rules:
          - record: instance:node_num_cpu:sum
            expr: count without(cpu) (count without(mode) (node_cpu_seconds_total{job="node-exporter"}))
          - record: instance:node_cpu_utilisation:rate30m
            expr: 1 - avg without(cpu, mode) (rate(node_cpu_seconds_total{job="node-exporter",mode="idle"}[30m]))
          - record: instance:node_load15_per_cpu:ratio
            expr: (node_load15{job="node-exporter"} / instance:node_num_cpu:sum{job="node-exporter"})
        # alert when scraping results in too few samples, adapt threshold when adding metrics
        - name: scrape.rules
          rules:
          - alert: ScrapeError
            expr: scrape_samples_scraped{service="prometheus-kube-prometheus-prometheus"} < 125
            for: 30m
            labels:
              severity: critical
            annotations:
              summary: Scraping service {{$labels.service}} failed.
              description: Scraping service {{$labels.service}} resulted in {{$value}} samples.


    # disable operator, alert manager, grafana
    prometheusOperator:
      enabled: false
      admissionWebhooks:
          enabled: false # https://github.com/helm/charts/issues/23326
    alertmanager:
      enabled: false
    grafana:
      enabled: false

    # disable exporters etc.
    kubeApiServer:
      enabled: false
    kubelet:
      enabled: false
    kubeControllerManager:
      enabled: false
    coreDns:
      enabled: false
    kubeEtcd:
      enabled: false
    kubeScheduler:
      enabled: false
    kubeProxy:
      enabled: false
    kubeStateMetrics:
      enabled: false
    nodeExporter:
      enabled: false