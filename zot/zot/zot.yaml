apiVersion: apps/v1
kind: Deployment
metadata:
  name: zot
  namespace: zot
  labels:
    app.kubernetes.io/name: zot
    app.kubernetes.io/instance: zot
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: zot
      app.kubernetes.io/instance: zot
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: zot
        app.kubernetes.io/instance: zot
    spec:
      containers:
        - name: zot
          image: ghcr.io/project-zot/zot
          ports:
            - name: zot
              containerPort: 5000
              protocol: TCP
          volumeMounts:
            - name: data
              mountPath: /var/lib/registry
            - mountPath: '/etc/zot'
              name: zot-config
            - mountPath: '/secrets'
              name: zot-secrets
          livenessProbe:
            initialDelaySeconds: 5
            httpGet:
              path: /v2/
              port: 5000
              scheme: HTTP
          readinessProbe:
            initialDelaySeconds: 5
            httpGet:
              path: /v2/
              port: 5000
              scheme: HTTP
          startupProbe:
            initialDelaySeconds: 5
            periodSeconds: 10
            failureThreshold: 3
            httpGet:
              path: /v2/
              port: 5000
              scheme: HTTP
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: zot-pvc
        - name: zot-config
          configMap:
            name: zot-config
        - name: zot-secrets
          secret:
            secretName: zot-secrets
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: zot-config
  namespace: zot
data:
  config.json: |-
    {
      "storage": {
        "rootDirectory": "/var/lib/registry",
        "dedupe": true,
        "gc": true,
        "gcDelay": "1h",
        "gcInterval": "24h"
      },
      "http": {
        "address": "0.0.0.0",
        "port": "5000",
        "compat": ["docker2s2"]
      },
      "log": { "level": "debug" },
      "extensions": {
        "metrics": {
            "enable": true,
            "prometheus": {
                "path": "/metrics"
            }
        },
        "search": {
          "enable": true
        },
        "ui": {
          "enable": true
        },
        "sync": {
          "enable": false,
          "credentialsFile": "/secrets/sync-auth.json",
          "registries": [
            {
              "urls": ["https://index.docker.io"],
              "content": [
                {
                  "prefix": "**",
                  "destination": "/docker.io"
                }
              ],
              "onDemand": true,
              "tlsVerify": true,
              "preserveDigest": true
            },
            {
              "urls": ["https://ghcr.io"],
              "content": [
                {
                  "prefix": "**",
                  "destination": "/ghcr.io"
                }
              ],
              "onDemand": true,
              "tlsVerify": true
            },
            {
              "urls": ["https://registry.k8s.io"],
              "content": [
                {
                  "prefix": "**",
                  "destination": "/registry.k8s.io"
                }
              ],
              "onDemand": true,
              "tlsVerify": true
            },
            {
              "urls": ["https://quay.io"],
              "content": [
                {
                  "prefix": "**",
                  "destination": "/quay.io"
                }
              ],
              "onDemand": true,
              "tlsVerify": true
            }
          ]
        }
      }
    }
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app.kubernetes.io/instance: zot
    app.kubernetes.io/name: zot
    recurring-job.longhorn.io/source: enabled
    recurring-job-group.longhorn.io/no-backup: enabled
  name: zot-pvc
  namespace: zot
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: longhorn
---
apiVersion: v1
kind: Service
metadata:
  name: zot
  namespace: zot
  labels:
    app.kubernetes.io/name: zot
    app.kubernetes.io/instance: zot
spec:
  ports:
    - port: 5000
      targetPort: zot
      protocol: TCP
      name: zot
  selector:
    app.kubernetes.io/name: zot
    app.kubernetes.io/instance: zot
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: zot-ingress
  namespace: zot
spec:
  entryPoints:
    - web
  routes:
  - kind: Rule
    match: Host(`registry.fritz.box`)
    services:
    - name: zot
      port: 5000
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    release: prometheus
  name: zot
  namespace: zot
spec:
  endpoints:
  - path: /metrics
    port: zot
  namespaceSelector:
    matchNames:
    - zot
  selector:
    matchLabels:
      app.kubernetes.io/name: zot
      app.kubernetes.io/instance: zot
